#!/usr/bin/env python

import sys
import os
import time
import subprocess
import argparse

#transpose a list of strings
def transpose(listofstrings):
    flipped = []
    listofstrings = map(lambda x: list(x), listofstrings)
    transposed = zip(*listofstrings)
    x=1
    for line in transposed:
        if x==0:
            x=1
        else:
            flipped.insert(0,line)
            x=0
    return map(lambda x: "".join(x), flipped)

#append " " to each string in list until square
def matchlengths(listofstrings):
    for i in range(len(listofstrings)):
        for j in range(80-len(listofstrings[i])):
            listofstrings[i] += " "
    return listofstrings


#parse arguments
parser = argparse.ArgumentParser(description='Banner-ized some text')
parser.add_argument('string', metavar='S', type=str, nargs='+',help="your string to be banner-ized")
parser.add_argument('--all', action='store_true')
args = parser.parse_args()

#the width of the display
height, WIDTH = os.popen('stty size', 'r').read().split()
WIDTH = int(WIDTH)

#join string arguments
message = " ".join(args.string)

#generate banner from bash script and split by line
banner = subprocess.check_output(['banner','-w 80',message])
banner = banner.split('\n')

#transpose banner to generate bannerized message
bannerized = transpose(matchlengths(banner))

#display bannerized message
offset = WIDTH
try:
    while True:
        os.system("clear")
        #print each line of the message, including the offset.
        for x in range(len(bannerized)):
            print(" " * offset + bannerized[x][max(0,offset*-1):WIDTH - offset])
        #move the message a little to the left.
        offset -=2
        #if the entire message has moved 'through' the display then
        #start again from the right hand side.
        if offset <= 0:
            break
        #take out or change this line to speed up / slow down the display
        time.sleep(0.035)
except KeyboardInterrupt:
    os.system("clear")
    print "oops, nevermind"
